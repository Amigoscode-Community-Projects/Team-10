/*
 * Uber App MVP - Registration and Login
 * An API for learning API first design approach
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.UberAppMvpRegistrationAndLogin);
  }
}(this, function(expect, UberAppMvpRegistrationAndLogin) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('Passenger', function() {
      beforeEach(function() {
        instance = new UberAppMvpRegistrationAndLogin.Passenger();
      });

      it('should create an instance of Passenger', function() {
        // TODO: update the code to test Passenger
        expect(instance).to.be.a(UberAppMvpRegistrationAndLogin.Passenger);
      });

      it('should have the property passengerId (base name: "passengerId")', function() {
        // TODO: update the code to test the property passengerId
        expect(instance).to.have.property('passengerId');
        // expect(instance.passengerId).to.be(expectedValueLiteral);
      });

      it('should have the property picture (base name: "picture")', function() {
        // TODO: update the code to test the property picture
        expect(instance).to.have.property('picture');
        // expect(instance.picture).to.be(expectedValueLiteral);
      });

    });
  });

}));
